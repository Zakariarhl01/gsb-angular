{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/medecin.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction MedecinSeulComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Rapport:\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class MedecinSeulComponent {\n  constructor(medecinService, route) {\n    this.medecinService = medecinService;\n    this.route = route;\n  }\n  ngOnInit() {\n    const id = +this.route.snapshot.params['id'];\n    this.unMedecin$ = this.medecinService.getMedecinById(+id);\n  }\n  static #_ = this.ɵfac = function MedecinSeulComponent_Factory(t) {\n    return new (t || MedecinSeulComponent)(i0.ɵɵdirectiveInject(i1.MedecinServices), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MedecinSeulComponent,\n    selectors: [[\"app-medecin-seul\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [1, \"button-container\"], [\"routerLink\", \"/medecin\"]],\n    template: function MedecinSeulComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MedecinSeulComponent_div_0_Template, 3, 0, \"div\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"button\", 2);\n        i0.ɵɵtext(4, \"Retour \\u00E0 la liste\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(1, 1, ctx.unMedecin$));\n      }\n    },\n    dependencies: [i3.NgForOf, i2.RouterLink, i3.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","MedecinSeulComponent","constructor","medecinService","route","ngOnInit","id","snapshot","params","unMedecin$","getMedecinById","_","ɵɵdirectiveInject","i1","MedecinServices","i2","ActivatedRoute","_2","selectors","decls","vars","consts","template","MedecinSeulComponent_Template","rf","ctx","ɵɵtemplate","MedecinSeulComponent_div_0_Template","ɵɵproperty","ɵɵpipeBind1"],"sources":["D:\\www\\zakaria.rahal\\AP\\second annee paul\\05-Angular\\Angular\\GSB\\src\\app\\medecin-seul\\medecin-seul.component.ts","D:\\www\\zakaria.rahal\\AP\\second annee paul\\05-Angular\\Angular\\GSB\\src\\app\\medecin-seul\\medecin-seul.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MedecinServices } from '../services/medecin.service';\nimport { Medecin } from '../models/medecin.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-medecin-seul',\n  templateUrl: './medecin-seul.component.html',\n  styleUrls: ['./medecin-seul.component.scss']\n})\nexport class MedecinSeulComponent implements OnInit{\n  unMedecin$!:Observable<Medecin[]>;\n\n  constructor(private medecinService:MedecinServices, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    const id =+ this.route.snapshot.params['id'];\n    this.unMedecin$ = this.medecinService.getMedecinById(+id);\n    \n  }\n \n}\n","<div *ngFor=\"let unMedecin of unMedecin$ | async\">\n<h2>Rapport:</h2>\n</div>\n<div class=\"button-container\">\n<button routerLink=\"/medecin\">Retour à la liste</button>\n"],"mappings":";;;;;;ICAAA,EAAA,CAAAC,cAAA,UAAkD;IAC9CD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;ADUjB,OAAM,MAAOC,oBAAoB;EAG/BC,YAAoBC,cAA8B,EAAUC,KAAqB;IAA7D,KAAAD,cAAc,GAAdA,cAAc;IAA0B,KAAAC,KAAK,GAALA,KAAK;EAAoB;EAErFC,QAAQA,CAAA;IACN,MAAMC,EAAE,GAAE,CAAE,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IAC5C,IAAI,CAACC,UAAU,GAAG,IAAI,CAACN,cAAc,CAACO,cAAc,CAAC,CAACJ,EAAE,CAAC;EAE3D;EAAC,QAAAK,CAAA,G;qBATUV,oBAAoB,EAAAJ,EAAA,CAAAe,iBAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAjB,EAAA,CAAAe,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAApBhB,oBAAoB;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXjC3B,EAAA,CAAA6B,UAAA,IAAAC,mCAAA,iBAEM;;QACN9B,EAAA,CAAAC,cAAA,aAA8B;QACAD,EAAA,CAAAE,MAAA,6BAAiB;QAAAF,EAAA,CAAAG,YAAA,EAAS;;;QAJ7BH,EAAA,CAAA+B,UAAA,YAAA/B,EAAA,CAAAgC,WAAA,OAAAJ,GAAA,CAAAhB,UAAA,EAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}