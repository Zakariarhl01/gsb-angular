{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class Rapportservice {\n  constructor(http) {\n    this.http = http;\n  }\n  getRapportById(id, idVisiteur) {\n    return this.http.get(`http://172.20.120.31/gsb/gsbapi/?idRapport=${id}&idVisiteur=${idVisiteur}`);\n  }\n  insertRapportById(date, motif, bilan, idVisiteur, idMedecin) {\n    return this.http.get(`http://172.20.120.31/gsb/gsbapi/?addRapport&date=${date}&motif=${motif}&bilan=${bilan}&idVisiteur=${idVisiteur}&idMedecin=${idMedecin}`);\n  }\n  getNomPrenomVisiteurById(idVisiteur) {\n    return this.http.get(`http://172.20.120.31/gsb/gsbapi/?idVisiteur=${idVisiteur}`);\n  }\n  static #_ = this.ɵfac = function Rapportservice_Factory(t) {\n    return new (t || Rapportservice)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Rapportservice,\n    factory: Rapportservice.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Rapportservice","constructor","http","getRapportById","id","idVisiteur","get","insertRapportById","date","motif","bilan","idMedecin","getNomPrenomVisiteurById","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\www\\zakaria.rahal\\AP\\second annee paul\\05-Angular\\Angular\\GSB\\src\\app\\services\\rapport.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from 'rxjs';\r\nimport { Rapport } from \"../models/rapport.model\";\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\n\r\nexport class Rapportservice {\r\n    rapports!:Rapport[];\r\n    constructor(private http: HttpClient) { }\r\n     \r\n    getRapportById(id: number, idVisiteur:string): Observable<Rapport[]> {\r\n        return this.http.get<Rapport[]>(`http://172.20.120.31/gsb/gsbapi/?idRapport=${id}&idVisiteur=${idVisiteur}`);\r\n    }\r\n    \r\n    insertRapportById(date: string, motif: string, bilan: string, idVisiteur: string, idMedecin: string): Observable<any> {\r\n\r\n        return this.http.get<Rapport[]>(`http://172.20.120.31/gsb/gsbapi/?addRapport&date=${date}&motif=${motif}&bilan=${bilan}&idVisiteur=${idVisiteur}&idMedecin=${idMedecin}`);\r\n    }\r\n\r\n    getNomPrenomVisiteurById(idVisiteur: string): Observable<Rapport[]> {\r\n        return this.http.get<Rapport[]>(`http://172.20.120.31/gsb/gsbapi/?idVisiteur=${idVisiteur}`);\r\n    }\r\n}\r\n"],"mappings":";;AAWA,OAAM,MAAOA,cAAc;EAEvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,cAAcA,CAACC,EAAU,EAAEC,UAAiB;IACxC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,8CAA8CF,EAAE,eAAeC,UAAU,EAAE,CAAC;EAChH;EAEAE,iBAAiBA,CAACC,IAAY,EAAEC,KAAa,EAAEC,KAAa,EAAEL,UAAkB,EAAEM,SAAiB;IAE/F,OAAO,IAAI,CAACT,IAAI,CAACI,GAAG,CAAY,oDAAoDE,IAAI,UAAUC,KAAK,UAAUC,KAAK,eAAeL,UAAU,cAAcM,SAAS,EAAE,CAAC;EAC7K;EAEAC,wBAAwBA,CAACP,UAAkB;IACvC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,+CAA+CD,UAAU,EAAE,CAAC;EAChG;EAAC,QAAAQ,CAAA,G;qBAfQb,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdlB,cAAc;IAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;IAAAC,UAAA,EAHZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}