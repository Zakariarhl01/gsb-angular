{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MedicamentServices {\n  constructor(http) {\n    this.http = http;\n  }\n  getAllMedicament() {\n    return this.http.get('http://172.20.120.31/gsb/gsbapi/?nomMed');\n  }\n  getMedicamentById(id) {\n    const medicament = this.medicaments.find(s => {\n      return s.id === id;\n    });\n    if (medicament) {\n      return medicament;\n    } else {\n      throw new Error('Médicament non trouvé');\n    }\n  }\n  static #_ = this.ɵfac = function MedicamentServices_Factory(t) {\n    return new (t || MedicamentServices)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MedicamentServices,\n    factory: MedicamentServices.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport class Medecin {}","map":{"version":3,"names":["MedicamentServices","constructor","http","getAllMedicament","get","getMedicamentById","id","medicament","medicaments","find","s","Error","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn","Medecin"],"sources":["D:\\www\\zakaria.rahal\\AP\\second annee paul\\05-Angular\\Angular\\GSB\\src\\app\\services\\gsb.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from 'rxjs';\r\nimport { Medicament } from \"../models/gsb.model\";\r\nimport { Medecin } from \"../models/gsb.model\";\r\n\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\n\r\nexport class MedicamentServices {\r\n    medicaments!:Medicament[];\r\n\r\n    constructor(private http:HttpClient) { }\r\n\r\n    getAllMedicament():Observable<Medicament[]>{\r\n        return this.http.get<Medicament[]>('http://172.20.120.31/gsb/gsbapi/?nomMed');\r\n    }\r\n\r\n    getMedicamentById(id: string) {\r\n        const medicament = this.medicaments.find(\r\n                (s) => {\r\n                    return s.id === id;\r\n                }\r\n            );\r\n            if(medicament){\r\n              return medicament;\r\n            } else {\r\n              throw new Error('Médicament non trouvé');\r\n              \r\n            }\r\n    }\r\n}\r\n\r\nexport class Medecin {\r\n    medecin!:Medecin[]\r\n\r\n}"],"mappings":";;AAUA,OAAM,MAAOA,kBAAkB;EAG3BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,gBAAgBA,CAAA;IACZ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAe,yCAAyC,CAAC;EACjF;EAEAC,iBAAiBA,CAACC,EAAU;IACxB,MAAMC,UAAU,GAAG,IAAI,CAACC,WAAW,CAACC,IAAI,CAC/BC,CAAC,IAAI;MACF,OAAOA,CAAC,CAACJ,EAAE,KAAKA,EAAE;IACtB,CAAC,CACJ;IACD,IAAGC,UAAU,EAAC;MACZ,OAAOA,UAAU;KAClB,MAAM;MACL,MAAM,IAAII,KAAK,CAAC,uBAAuB,CAAC;;EAGlD;EAAC,QAAAC,CAAA,G;qBArBQZ,kBAAkB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBjB,kBAAkB;IAAAkB,OAAA,EAAlBlB,kBAAkB,CAAAmB,IAAA;IAAAC,UAAA,EAHhB;EAAM;;AA2BrB,OAAM,MAAOC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}