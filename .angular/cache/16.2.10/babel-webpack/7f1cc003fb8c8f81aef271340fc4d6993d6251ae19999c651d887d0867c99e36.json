{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/medecin.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../medicament/medicament.component\";\nimport * as i4 from \"../medecin/medecin.component\";\nfunction MedecinListComponent_app_medicament_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-medicament\", 1);\n  }\n  if (rf & 2) {\n    const unMedecin_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"medecin\", unMedecin_r1);\n  }\n}\nexport class MedecinListComponent {\n  constructor(medecinService) {\n    this.medecinService = medecinService;\n  }\n  ngOnInit() {\n    this.medecin$ = this.medecinService.getAllMedecin();\n  }\n  static #_ = this.ɵfac = function MedecinListComponent_Factory(t) {\n    return new (t || MedecinListComponent)(i0.ɵɵdirectiveInject(i1.MedecinServices));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MedecinListComponent,\n    selectors: [[\"app-medecin-list\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[3, \"medecin\", 4, \"ngFor\", \"ngForOf\"], [3, \"medecin\"]],\n    template: function MedecinListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Les M\\u00E9dicaments\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"ul\");\n        i0.ɵɵtemplate(3, MedecinListComponent_app_medicament_3_Template, 1, 1, \"app-medicament\", 0);\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(4, 1, ctx.medecin$));\n      }\n    },\n    dependencies: [i2.NgForOf, i3.MedicamentComponent, i4.MedecinComponent, i2.AsyncPipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelement","ɵɵproperty","unMedecin_r1","MedecinListComponent","constructor","medecinService","ngOnInit","medecin$","getAllMedecin","_","ɵɵdirectiveInject","i1","MedecinServices","_2","selectors","decls","vars","consts","template","MedecinListComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","MedecinListComponent_app_medicament_3_Template","ɵɵadvance","ɵɵpipeBind1"],"sources":["D:\\www\\zakaria.rahal\\AP\\second annee paul\\05-Angular\\Angular\\GSB\\src\\app\\medecin-list\\medecin-list.component.ts","D:\\www\\zakaria.rahal\\AP\\second annee paul\\05-Angular\\Angular\\GSB\\src\\app\\medecin-list\\medecin-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MedecinServices } from '../services/medecin.service';\nimport { Observable } from 'rxjs';\nimport { Medecin } from '../models/medecin.model';\n\n@Component({\n  selector: 'app-medecin-list',\n  templateUrl: './medecin-list.component.html',\n  styleUrls: ['./medecin-list.component.scss']\n})\nexport class MedecinListComponent implements OnInit{\n\n  medecin$!:Observable<Medecin[]>;\n\n  constructor(private medecinService:MedecinServices) {}\n\n  ngOnInit(): void {\n    \n    this.medecin$ = this.medecinService.getAllMedecin();\n\n  }\n}\n","<h1>Les Médicaments</h1>\n<ul>\n         <app-medicament *ngFor=\"let unMedecin of medecin$ |async\" [medecin]=\"unMedecin\"></app-medicament>\n</ul>\n   "],"mappings":";;;;;;;ICESA,EAAA,CAAAC,SAAA,wBAAiG;;;;IAAvCD,EAAA,CAAAE,UAAA,YAAAC,YAAA,CAAqB;;;ADQxF,OAAM,MAAOC,oBAAoB;EAI/BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAmB;EAErDC,QAAQA,CAAA;IAEN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,cAAc,CAACG,aAAa,EAAE;EAErD;EAAC,QAAAC,CAAA,G;qBAVUN,oBAAoB,EAAAJ,EAAA,CAAAW,iBAAA,CAAAC,EAAA,CAAAC,eAAA;EAAA;EAAA,QAAAC,EAAA,G;UAApBV,oBAAoB;IAAAW,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVjCrB,EAAA,CAAAuB,cAAA,SAAI;QAAAvB,EAAA,CAAAwB,MAAA,2BAAe;QAAAxB,EAAA,CAAAyB,YAAA,EAAK;QACxBzB,EAAA,CAAAuB,cAAA,SAAI;QACKvB,EAAA,CAAA0B,UAAA,IAAAC,8CAAA,4BAAiG;;QAC1G3B,EAAA,CAAAyB,YAAA,EAAK;;;QAD0CzB,EAAA,CAAA4B,SAAA,GAAkB;QAAlB5B,EAAA,CAAAE,UAAA,YAAAF,EAAA,CAAA6B,WAAA,OAAAP,GAAA,CAAAd,QAAA,EAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}